on:
  push:
    branches:
      - main

jobs:
  commitlint:
    name: Linting commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4
  build:
    name: Build with OpenJDK v${{ matrix.java-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [8, 11, 17]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          cache: 'gradle'
          distribution: 'temurin' # OpenJDK vendor
          java-version: ${{ matrix.java-version }}
      - run: gradle build
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-${{ matrix.java-version }}-${{ env.GITHUB_SHA }}-build
          path: build
  test:
    name: Test with OpenJDK v${{ matrix.java-version }}
    runs-on: ubuntu-latest
    needs: ['build']
    strategy:
      matrix:
        java-version: [ 8, 11, 17 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ runner.os }}-${{ matrix.java-version }}-${{ env.GITHUB_SHA }}-build
      - uses: actions/setup-java@v2
        with:
          cache: 'gradle'
          distribution: 'temurin' # OpenJDK vendor
          java-version: ${{ matrix.java-version }}
      - run: gradle test
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.java-version }} == 11 # Only upload on Java 11
        with:
          name: ${{ runner.os }}-${{ matrix.java-version }}-${{ env.GITHUB_SHA }}-test
          path: build
  coverage:
    name: Check test coverage with Jacoco
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ runner.os }}-${{ matrix.java-version }}-${{ env.GITHUB_SHA }}-test
      - uses: actions/setup-java@v2
        with:
          cache: 'gradle'
          distribution: 'temurin' # OpenJDK vendor
          java-version: 11
      - run: gradle jacocoTestCoverageVerification
